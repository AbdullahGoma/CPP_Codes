//Highest Element,Seconed Highest Element,min-sum
#include <iostream>
using namespace std;
int main()
{
    int i,x[i],n,temp,j,largest,index;
    cout<<"Please Enter number n of Array : "<<endl;
    cin>>n;
    for(int i=0;i<n;i++){
        cout<<"Enter The "<<i<<" st Element : "<<endl;
        cin>>x[i];
    }
    for(int i=0;i<n;i++){
        if(i == 0){
            index = i;
            largest = x[i];
        }else if(largest<x[i]){
            index = i;
            largest = x[i];
        }
    }
    for(int i = 0;i<n;i++){
        for(int j = i+1;j<n;j++){
            if(x[i]>x[j]){
                temp = x[j];
                x[j] = x[i];
                x[i] = temp;
            }
        }
    }
    cout<<"The largest number is : "<< largest<<" and the index is = "<<index<<endl;
    cout<<"\nThe second highest is : "<<x[n-2]<<" and the index is = "<<endl;
    cout<<"\nSum of Minimum is : "<<x[0]+x[1]<<endl;
    return 0;
}
.......................................
#include <iostream>
using namespace std;
int main()
{
    bool found = false;
    int n,x[5],start,finish,key,m;
    cout<<"Enter n of sorted Array"<<endl;
    cin>>n;
    for(int i=0;i<n;i++){
        cout<<"Enter the "<<i<<" th index :"<<endl;
        cin>>x[i];
    }
    cout<<"Enter Element you search it in array :"<<endl;
    cin>>key;
    start = 0;
    finish = n-1;

    while((start<=finish)and(!found)){
        m = (start + finish)/2;
        if (key == x[m]){
            found = true;
        }
        else if(key<x[m]){
            finish = m-1;
        }else{
        start = m+1;
        }
    }
    if(found==true){cout<<"The index of element is :"<<m<<endl;}else cout<<"We didn't find the key";

    return 0;
}
................................................
#include <iostream>
using namespace std;
int main()
{
  int counter_1=0,counter_2=0,counter_3=0,n,m;
  cout<<"Enter The length of first Array : "<<endl;
  cin>>n;
  cout<<"Enter The length of second Array : "<<endl;
  cin>>m;
  int arr1[n],arr2[m],arr3[n+m];
  for(int i = 0;i<n;i++){
    cout<<"Enter The : "<<i<<"th element : "<<endl;
    cin>>arr1[i];
  }
  for(int i = 0;i<m;i++){
    cout<<"Enter The : "<<i<<"th element : "<<endl;
    cin>>arr2[i];
  }
  while(counter_1<m){
    if(counter_2<m){
        if(arr1[counter_1]<arr2[counter_2]){
            arr3[counter_3]=arr1[counter_1];
            counter_1++;
            counter_3++;
        }else if(arr1[counter_1]>arr2[counter_2]){
            arr3[counter_3]=arr2[counter_2];
            counter_2++;
            counter_3++;
        }else if(arr1[counter_1] == arr2[counter_2]){
            arr3[counter_3]=arr1[counter_1];
            counter_1++;
            counter_2++;
            counter_3++;
        }

    }else{
          for(int i = counter_1;i<n;i++){
            arr3[counter_3] = arr1[counter_1];
            counter_1++;
            counter_3++;
          }

    }
  }
  if(counter_2<m){
    for(int i = counter_2;i<m;i++){
        arr3[counter_3] = arr2[counter_2];
        counter_2++;
        counter_3++;
    }

  for(int i = 0;i<counter_3;i++){
    cout<<arr3[i]<<"   ";
  }
  }

  return 0;
}

..................................................................
#include <iostream>
using namespace std;
int main()
{
  int n,m;
  int arr1[n],arr2[m],arr3[n+m],temp;
  cout<<"Enter The length of first Array : "<<endl;
  cin>>n;
  cout<<"Enter The length of second Array : "<<endl;
  cin>>m;
  for(int i = 0;i<n;i++){
    cout<<"Enter The : "<<i<<"th element : "<<endl;
    cin>>arr1[i];
  }
  for(int i = 0;i<m;i++){
    cout<<"Enter The : "<<i<<"th element : "<<endl;
    cin>>arr2[i];
  }
  for(int i = 0;i<n;i++){
    arr3[i] = arr1[i];
  }
  for(int i = 0;i<m;i++){
    arr3[i+n] = arr2[i];
  }
  for(int i = 0;i<n+m;i++){
        for(int j = i+1;j<n+m;j++){
            if(arr3[i]>arr3[j]){
                temp = arr3[j];
                arr3[j] = arr3[i];
                arr3[i] = temp;
            }
        }
  }
  for(int i = 0;i<n+m;i++){
    cout<<arr3[i]<<"   ";
  }
  return 0;
}
...............................................................
// Quick sort in C++

#include <iostream>
using namespace std;

// function to swap elements
void swap(int *a, int *b) {
  int t = *a;
  *a = *b;
  *b = t;
}

// function to print the array
void printArray(int array[], int size) {
  int i;
  for (i = 0; i < size; i++)
    cout << array[i] << " ";
  cout << endl;
}

// function to rearrange array (find the partition point)
int partition(int array[], int low, int high) {
    
  // select the rightmost element as pivot
  int pivot = array[high];
  
  // pointer for greater element
  int i = (low - 1);

  // traverse each element of the array
  // compare them with the pivot
  for (int j = low; j < high; j++) {
    if (array[j] <= pivot) {
        
      // if element smaller than pivot is found
      // swap it with the greater element pointed by i
      i++;
      
      // swap element at i with element at j
      swap(&array[i], &array[j]);
    }
  }
  
  // swap pivot with the greater element at i
  swap(&array[i + 1], &array[high]);
  
  // return the partition point
  return (i + 1);
}

void quickSort(int array[], int low, int high) {
  if (low < high) {
      
    // find the pivot element such that
    // elements smaller than pivot are on left of pivot
    // elements greater than pivot are on righ of pivot
    int pi = partition(array, low, high);

    // recursive call on the left of pivot
    quickSort(array, low, pi - 1);

    // recursive call on the right of pivot
    quickSort(array, pi + 1, high);
  }
}

// Driver code
int main() {
  int data[] = {8, 7, 6, 1, 0, 9, 2};
  int n = sizeof(data) / sizeof(data[0]);
  
  cout << "Unsorted Array: \n";
  printArray(data, n);
  
  // perform quicksort on data
  quickSort(data, 0, n - 1);
  
  cout << "Sorted array in ascending order: \n";
  printArray(data, n);
}
........................................................
#include <iostream>
using namespace std;
void swap(int *a, int *b) {
  int t = *a;
  *a = *b;
  *b = t;
}
void printArray(int array[], int size) {
  int i;
  for (i = 0; i < size; i++)
    cout << array[i] << " ";
  cout << endl;
}
int partition(int array[], int low, int high) {
  int pivot = array[high];
  int i = (low - 1);
  for (int j = low; j < high; j++) {
    if (array[j] <= pivot) {
      i++;
      swap(&array[i], &array[j]);
    }
  }
  swap(&array[i + 1], &array[high]);
  return (i + 1);
}

void quickSort(int array[], int low, int high) {
  if (low < high) {
    int pi = partition(array, low, high);
    quickSort(array, low, pi - 1);
    quickSort(array, pi + 1, high);
  }
}
int main() {
  int n;
  cout<<"Enter n of Array : "<<endl;
  cin>>n;
  int data[n];
  for(int i;i<n;i++){
    cout<<"Enter The "<<i<<" th element : "<<endl;
    cin>>data[i];
  }
  printArray(data, n);
  quickSort(data, 0, n - 1);
  cout << "Sorted array in ascending order: \n";
  printArray(data, n);
}
......................................
#include <iostream>
using namespace std;
int main()
{
    int n,s;
    cout<<"insert the number of element in a group "<<endl ;
    cin>>n ;
    cout<<"insert the number of element in b group "<<endl ;
    cin>>s;
    if(s==n)
    {
        int a[n];
        int b[n];
        for(int i=0 ; i<s ; i++)
        {
            cout<<"insert the"<<i<<"th in a group "<<endl ;
            cin>>a[i] ;

        }
        for(int i=0 ; i<s ; i++)
        {
            cout<<"insert the"<<i<<"th in b group "<<endl ;
            cin>>b[i] ;
        }
        for(int i=0 ; i<s ; i++)
        {
            if(a[i]!=b[i])
            {
                cout<<"the two groups are not identical "<<endl ;
                break;
            }
            else if (i==s-1)
                cout<<"the groups are identical"<<endl ;
        }
    }
    else
        cout<<"the two groups are not identical "<<endl ;


    return 0;
}
..........................................................
#include <iostream>
using namespace std;
int main()
{
    cout<<"insert no. student"<<endl;
    int n;
    cin>>n;
    int std_id[n];
    int Std [n];
    for(int i =0 ; i<n;i++){
     cout<<"insert id of the "<<i<<"th student"<<endl;
      cin>>std_id[i];
       cout<<"insert degree of the "<<i<<"th student"<<endl;
      cin>>Std[i];
        }
        for(int i = 0 ;i<n ; i++){
    if(Std[i]>100){
        cout<<"wrong num ,please insert correct num"<<endl ;
    }else if(Std[i]>=90){
    cout<<"the grad of student with id :"<<std_id[i]<<" is   A"<<endl ;
    }else if(Std[i]>=80){
    cout<<"the grad of student with id :"<<std_id[i]<<" is   B"<<endl ;
    }else if(Std[i]>=70){
    cout<<"the grad of student with id :"<<std_id[i]<<" is   C"<<endl ;
    }else if(Std[i]>=60){
    cout<<"the grad of student with id :"<<std_id[i]<<" is   D"<<endl ;
    }else if(Std[i]>=0){
    cout<<"the grad of student with id :"<<std_id[i]<<" is   F"<<endl ;
    }else{
    cout<<"wrong num ,please insert correct num"<<endl ;
    }
        }
    return 0;
}
.......................................................................
#include <iostream>
using namespace std;
int main()
{
    cout<<"the number to find all prime numbers before it "<<endl ;
    long n ;
    cin>>n;
   long num [n-1];
   for(int i = 2 ; i<n+1;i++){
    num[i-2]=i;
    }
    for(long i =0 ; i <n-1;i++){
    if(num[i]!=0){
        for(long j=i+1;j<n-1;j++){
            if(num[j]%num[i]==0){
                num[j]=0 ;
            }
        }
    }
    }
    cout<<"the prime numbers :  ";
    for(long i =0 ; i<n-1;i++){
        if(num[i]!=0)
            cout<<num[i]<<"  ";
        
    }

    return 0;
}
.....................................................
#include <iostream>
using namespace std;
int main() {
  int n, m, temp;

  cout << "Enter length of 1st array : " << endl;
  cin >> n;

  cout << "Enter length of 2nd array : " << endl;
  cin >> m;

  int arr1[n], arr2[m], arr3[n+m];

  for (int i = 0; i < n; i++) {
    cout << "Enter the " << i << "th element: " << endl;
    cin >> arr1[i];
  }

  for (int i = 0; i < m; i++) {
    cout << "Enter the " << i << "th element: " << endl;
    cin >> arr2[i];
  }

  for (int i = 0; i < n; i++) {
    arr3[i] = arr1[i];
  }

  for (int i = 0; i < m; i++) {
    arr3[i + n] = arr2[i];
  }

  for (int i = 0; i < n + m; i++) {
        for (int j = i+1; j < n + m; j++) {
            if (arr3[i] > arr3[j]) {
                temp = arr3[j];
                arr3[j] = arr3[i];
                arr3[i] = temp;
            }
        }
  }

  for (int i = 0; i < n + m; i++) {
    if (i != 0 and arr3[i] == arr3[i - 1])
        continue;
    cout << arr3[i] << "   ";
  }

  return 0;
}
............................................................